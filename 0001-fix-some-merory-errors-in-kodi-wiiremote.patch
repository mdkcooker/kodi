From 0407de85655133e71fd2799bcdcdb9034f789287 Mon Sep 17 00:00:00 2001
From: "Per Oyvind Karlsen (proyvind)" <proyvind@moondrake.org>
Date: Wed, 19 Nov 2014 08:24:26 +0000
Subject: [PATCH] fix some merory errors in kodi-wiiremote

---
 .../Clients/WiiRemote/CWIID_WiiRemote.cpp          | 22 ++++++++++++----------
 .../Clients/WiiRemote/CWIID_WiiRemote.h            | 11 ++++++++++-
 2 files changed, 22 insertions(+), 11 deletions(-)

diff --git a/tools/EventClients/Clients/WiiRemote/CWIID_WiiRemote.cpp b/tools/EventClients/Clients/WiiRemote/CWIID_WiiRemote.cpp
index 87af359..91469e9 100644
--- a/tools/EventClients/Clients/WiiRemote/CWIID_WiiRemote.cpp
+++ b/tools/EventClients/Clients/WiiRemote/CWIID_WiiRemote.cpp
@@ -35,9 +35,11 @@ bool g_AllowNunchuck  = true;
 CPacketHELO *g_Ping = NULL;
 
 #ifndef ICON_PATH
-#define ICON_PATH "../../"
+#define ICON_PATH "../.."
 #endif
-std::string g_BluetoothIconPath = std::string(ICON_PATH) + std::string("/bluetooth.png");
+#define CONCAT_STR(STR1, STR2)  STR1 STR2
+
+#define	g_BluetoothIconPath CONCAT_STR(ICON_PATH,"/bluetooth.png")
 
 int32_t getTicks()
 {
@@ -128,7 +130,7 @@ void CWiiRemote::ErrorCallback(struct wiimote *wiiremote, const char *str, va_li
 
 //Constructor
 /*This constructor is never used but it shows how one would connect to just a specific Wiiremote by Mac-Adress*/
-CWiiRemote::CWiiRemote(char *wii_btaddr)
+CWiiRemote::CWiiRemote(const char *wii_btaddr)
 {
   SetBluetoothAddress(wii_btaddr);
   m_SamplesX = NULL;
@@ -338,13 +340,13 @@ bool CWiiRemote::Connect()
     {
       SetupWiiRemote();
       // get battery state etc.
-      cwiid_state wiiremote_state;
+      cwiid_state wiiremote_state = {};
       int err = cwiid_get_state(m_wiiremoteHandle, &wiiremote_state);
       if (!err)
       {
-        char Mesg[1024];
+        char Mesg[1024] = {};
         sprintf(Mesg, "%i%% battery remaining", static_cast<int>(((float)(wiiremote_state.battery)/CWIID_BATTERY_MAX)*100.0));
-        CPacketNOTIFICATION notification("Wii Remote connected", Mesg, ICON_PNG, g_BluetoothIconPath.c_str());
+        CPacketNOTIFICATION notification("Wii Remote connected", Mesg, ICON_PNG, g_BluetoothIconPath);
         notification.Send(m_Socket, m_MyAddr);
       }
       else
@@ -352,7 +354,7 @@ bool CWiiRemote::Connect()
         printf("Problem probing for status of WiiRemote; cwiid_get_state returned non-zero\n");
         CPacketLOG log(LOGNOTICE, "Problem probing for status of WiiRemote; cwiid_get_state returned non-zero");
         log.Send(m_Socket, m_MyAddr);
-        CPacketNOTIFICATION notification("Wii Remote connected", "", ICON_PNG, g_BluetoothIconPath.c_str());
+        CPacketNOTIFICATION notification("Wii Remote connected", "", ICON_PNG, g_BluetoothIconPath);
         notification.Send(m_Socket, m_MyAddr);
       }
 #ifdef CWIID_OLD
@@ -381,12 +383,12 @@ void CWiiRemote::DisconnectNow(bool startConnectThread)
 
     if (g_AllowReconnect)
     {
-      CPacketNOTIFICATION notification("Wii Remote disconnected", "Press 1 and 2 to reconnect", ICON_PNG, g_BluetoothIconPath.c_str());
+      CPacketNOTIFICATION notification("Wii Remote disconnected", "Press 1 and 2 to reconnect", ICON_PNG, g_BluetoothIconPath);
       notification.Send(m_Socket, m_MyAddr);
     }
     else
     {
-      CPacketNOTIFICATION notification("Wii Remote disconnected", "", ICON_PNG, g_BluetoothIconPath.c_str());
+      CPacketNOTIFICATION notification("Wii Remote disconnected", "", ICON_PNG, g_BluetoothIconPath);
       notification.Send(m_Socket, m_MyAddr);
     }
 
@@ -739,7 +741,7 @@ int main(int argc, char **argv)
     log.Send(sockfd, my_addr);
     return -1;
   }
-  g_Ping = new CPacketHELO("WiiRemote", ICON_PNG, g_BluetoothIconPath.c_str());
+  g_Ping = new CPacketHELO("WiiRemote", ICON_PNG, g_BluetoothIconPath);
   g_WiiRemote.Initialize(my_addr, sockfd);
   g_WiiRemote.SetBluetoothAddress(btaddr);
   g_WiiRemote.SetSensativity(DeadX, DeadY, NumSamples);
diff --git a/tools/EventClients/Clients/WiiRemote/CWIID_WiiRemote.h b/tools/EventClients/Clients/WiiRemote/CWIID_WiiRemote.h
index 3a60479..c1839a4 100644
--- a/tools/EventClients/Clients/WiiRemote/CWIID_WiiRemote.h
+++ b/tools/EventClients/Clients/WiiRemote/CWIID_WiiRemote.h
@@ -69,7 +69,16 @@
 class CWiiRemote
 {
 public:
-  CWiiRemote(char *btaddr = NULL);
+  CWiiRemote() : m_NumSamples(), m_SamplesX(), m_SamplesY(),
+  m_MaxX(), m_MaxY(), m_MinX(), m_MinY(),
+  m_JoyMap(), m_lastKeyPressed(), m_LastKey(), m_buttonRepeat(),
+  m_lastKeyPressedNunchuck(), m_LastKeyNunchuck(), m_buttonRepeatNunchuck(),
+  m_connected(), m_DisconnectWhenPossible(), m_connectThreadRunning(),
+  m_wiiremoteHandle(), m_ledState(), m_rptMode(), m_btaddr(),
+  m_Socket(), m_MyAddr(),
+  m_haveIRSources(), m_isActive(), m_useIRMouse(), m_lastActiveTime() {};
+
+  CWiiRemote(const char *btaddr);
   ~CWiiRemote();
 	
   void Initialize(CAddress Addr, int Socket);
-- 
2.1.1

